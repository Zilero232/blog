Понятия: {
	1)Конкатенация,
	2)Интерполяция,
	3)Increment,
	4)Decrement,
	5)Division,
	6)Тернарный оператор - сокращение условий,
	7)Поиск подстроки, верхний регистр, нижний регистр,
	8)Стрелочная функция,
	9)Метод и свойства - вспомогательный функции и их значения,
	10)Function CallBack - вызов функций по порядку,
	11)Деструктуразиция - вытаскивание переменных из обьекта,
	12)Поверхностная, глобальная копия Obj, array - копирование 1-ого уровня или полностью,
	13)Оператор разворота - выводит все значения из array,
	14)Динамическая типизация - изменение типа данных,
	15)Обработичики событий и опции - возникнование действия и дальнейшная его обработка,
	16)Всплытие событий - иерархия начинается с  вложений,
	17)Навигация по DOM,
}	


Методы и свойства: {
	typeof = проверка на тип,
	toLowerCase = нижний регистр,
	toUpperCase = верхний регистр,
 	? - тернарный оператор,
	delete - удаление,
	lenght - проверка на количество,
	Object.keys - изменение обьекта на массив,
	Object.assign - соединение массивов,
	Object.create - создание прототипных связей,
	Object.setPrototypeOf - получает прототип,

	pop() - удаляет последнее значение масива,
	push(знач) - добавляет значение в конец массива,
	forEach - перебирает значения массива,
	split - преобразовывает в массив,
	slice - копирует старый массив,
	splice(номер, сколько значений) - удаление значения в массиве,	
	join - преобразоывает массив в строку,
	sort - сортировка по алфавиту,

	createElement - создание нового элемента на страничке,
	createTextNode - добавление текста,

	textCss - прописать сразу несколько стилей через js,
	classList - работа с классами через js,

	prepend - добавление в начало,
	append - добавление в конец,
	after(элемент) - добавить после,
	before(элемент) - добавить до,
	insertBefore(элемент, добавить перед чем),
	remove() - удаление,
	replaceWith - заменить на...,
	innerHTML - добавление тэгов,
	textContent - добавление текста,
	insertAbjacentHTML('условие', 'тэг') - добавление элемента до или после, 

	addEvenetLister('событие', function) - прослеживает события,
	remoteEventLister('событие', function) - удаляет прослеживание событий, 		
	preventDefault() - сброс стандартных событий,

	ChildNodes && chilren - показывает дочерние элементы данного элемента,
	parentElement && parrentNode - получаем родителя,
	FirstChild && FirstElementChild - получаем первый элемент,
	nextElementSibling && previousElementSibling - получаем предыдущий || следующий элемент,
	
}